@model TeacherStudentConnect.Models.User

@{
    ViewBag.Title = "Register";
}

<h2 class="text-center">User Register</h2>
<center><img class="img-responsive" src="~/UIPictures/websitelogo.jpg" width="100" height="100" /></center>
<div>
    <p class="text-success"> @ViewBag.Success</p>
   <p class="text-danger"> @ViewBag.Failure</p>
   @*<p> @ViewBag.Exception</p>*@
</div>

@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="col">
            <div class="col-md-offset-3">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <label>Male</label>
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "r" } })
                        <label>Female</label>
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
                        <label>Others</label>
                        @Html.RadioButtonFor(model => model.Gender, "Others", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownListFor(model => model.Category, new List<SelectListItem>
                        {
                        new SelectListItem{Text="Teacher",Value="Teacher"},
                        new SelectListItem{Text="Student",Value="Student"},
                        }, "Select Category Type", htmlAttributes: new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div id="teacher">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Subject, new List<SelectListItem>
                {
                    new SelectListItem { Text = "Marketing", Value = "Marketing" },
                    new SelectListItem { Text = "International Relations", Value = "International Relations" },
                    new SelectListItem { Text = "Human Resources Management", Value = "Human Resources Management" },
                    new SelectListItem { Text = "Commerce", Value = "Commerce" },
                    new SelectListItem { Text = "Economics", Value = "Economics" },
                    new SelectListItem { Text = "Bookkeeping", Value = "Bookkeeping" },
                    new SelectListItem { Text = "Accounting", Value = "Accounting" },
                    new SelectListItem { Text = "Banking & Finance", Value = "Banking & Finance" },
                    new SelectListItem { Text = "Business Administration and Management", Value = "Business Administration and Management" },
                    new SelectListItem { Text = "Entrepreneurship", Value = "Entrepreneurship" },
                    new SelectListItem { Text = "Digital & Social Media Marketing", Value = "Digital & Social Media Marketing" },
                    new SelectListItem { Text = "Business Communication", Value = "Business Communication" },
                    new SelectListItem { Text = "Foreign Exchange Trading", Value = "Foreign Exchange Trading" },
                }, "Select Subject", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfJoining, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateOfJoining, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateOfJoining, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PriorExperience, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PriorExperience, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PriorExperience, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>



                <div id="student">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BatchNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BatchNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BatchNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div>
    @*@Html.ActionLink("Back to List", "Index")*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
            //to change the fields of the form dynamically based on the CategoryType
            $("#teacher").hide();
            $("#student").hide();
            

        $("#Category").change(function () {
            //if category given is Student 
            if ($(this).val() == "Student") {
                $('#student').show();
                $('#teacher').hide();

                $('#BatchNumber').attr('required', '');
                $('#BatchNumber').attr('data-error', 'This field is required.');

                $('#Subject').removeAttr('required');
                $('#Subject').removeAttr('data-error');

                $('#DateOfJoining').removeAttr('required');
                $('#DateOfJoining').removeAttr('data-error');

                $('#BatchNumber').removeAttr('required');
                $('#BatchNumber').removeAttr('data-error');



            }
            //if category given is Teacher
            else if ($(this).val() == "Teacher") {
                $('#teacher').show();
                $('#student').hide();

                $('#Subject').attr('required', '');
                $('#Subject').attr('data-error', 'This field is required.');

                $('#DateOfJoining').attr('required', '');
                $('#DateOfJoining').attr('data-error', 'This field is required.');

                $('#PriorExperience').attr('required', '');
                $('#PriorExperience').attr('data-error', 'This field is required.');

                $('#BatchNumber').removeAttr('required');
                $('#BatchNumber').removeAttr('data-error');


            }
            // if category Type is not selected 
            else {
                $("#teacher").hide();
                $("#student").hide();

                $('#Subject').removeAttr('required');
                $('#Subject').removeAttr('data-error');

                $('#DateOfJoining').removeAttr('required');
                $('#DateOfJoining').removeAttr('data-error');

                $('#BatchNumber').removeAttr('required');
                $('#BatchNumber').removeAttr('data-error');

                $('#BatchNumber').removeAttr('required');
                $('#BatchNumber').removeAttr('data-error');
            }
        });
        $("#seeAnotherField").trigger("change");
    </script>
}
