@model TeacherStudentConnect.Models.Admin

<div>
    @ViewBag.StatusError
</div>

@using (Html.BeginForm(FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Admin</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.AdminId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AdminId, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @*@Html.ValidationMessageFor(model => model.AdminId, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @*@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @*@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @*@Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @*@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @*@Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @*@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @*@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })

            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AdminProfileStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            Approve @Html.RadioButtonFor(model => model.AdminProfileStatus, "Approved",
    new { htmlAttributes = new { @class = "form-control" } })
            &nbsp;&nbsp;
            Reject @Html.RadioButtonFor(model => model.AdminProfileStatus, "Rejected",
     new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AdminProfileStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "AdminList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
